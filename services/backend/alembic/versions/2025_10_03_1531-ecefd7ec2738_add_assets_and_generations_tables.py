"""add_assets_and_generations_tables

Revision ID: ecefd7ec2738
Revises: 0542eb271efc
Create Date: 2025-10-03 15:31:29.695071+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ecefd7ec2738'
down_revision: Union[str, Sequence[str], None] = '0542eb271efc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_workos_user_id_key'), 'users', type_='unique')

    # Create assets table
    op.create_table('assets',
        sqlmodel.Column('id', sqlmodel.String(), nullable=False),
        sqlmodel.Column('creation_date', sqlmodel.DateTime(), nullable=False),
        sqlmodel.Column('updated_date', sqlmodel.DateTime(), nullable=False),
        sqlmodel.Column('user_id', sqlmodel.String(), nullable=True),
        sqlmodel.Column('link', sqlmodel.String(), nullable=False),
        sqlmodel.Column('type', sqlmodel.String(), nullable=False),
        sqlmodel.Column('status', sqlmodel.String(), nullable=False),
        sqlmodel.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_assets_user_id_users')),
        sqlmodel.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assets_user_id'), 'assets', ['user_id'], unique=False)
    op.create_index(op.f('ix_assets_link'), 'assets', ['link'], unique=False)
    op.create_index(op.f('ix_assets_type'), 'assets', ['type'], unique=False)
    op.create_index(op.f('ix_assets_status'), 'assets', ['status'], unique=False)

    # Create generations table
    op.create_table('generations',
        sqlmodel.Column('id', sqlmodel.String(), nullable=False),
        sqlmodel.Column('creation_date', sqlmodel.DateTime(), nullable=False),
        sqlmodel.Column('updated_date', sqlmodel.DateTime(), nullable=False),
        sqlmodel.Column('user_id', sqlmodel.String(), nullable=True),
        sqlmodel.Column('prompt', sqlmodel.String(), nullable=False),
        sqlmodel.Column('first_frame', sqlmodel.String(), nullable=True),
        sqlmodel.Column('last_frame', sqlmodel.String(), nullable=True),
        sqlmodel.Column('generation_type', sqlmodel.String(), nullable=False),
        sqlmodel.Column('status', sqlmodel.String(), nullable=False),
        sqlmodel.Column('generated_content_url', sqlmodel.String(), nullable=True),
        sqlmodel.Column('error_message', sqlmodel.String(), nullable=True),
        sqlmodel.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_generations_user_id_users')),
        sqlmodel.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generations_user_id'), 'generations', ['user_id'], unique=False)
    op.create_index(op.f('ix_generations_prompt'), 'generations', ['prompt'], unique=False)
    op.create_index(op.f('ix_generations_generation_type'), 'generations', ['generation_type'], unique=False)
    op.create_index(op.f('ix_generations_status'), 'generations', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_generations_status'), table_name='generations')
    op.drop_index(op.f('ix_generations_generation_type'), table_name='generations')
    op.drop_index(op.f('ix_generations_prompt'), table_name='generations')
    op.drop_index(op.f('ix_generations_user_id'), table_name='generations')
    op.drop_table('generations')

    op.drop_index(op.f('ix_assets_status'), table_name='assets')
    op.drop_index(op.f('ix_assets_type'), table_name='assets')
    op.drop_index(op.f('ix_assets_link'), table_name='assets')
    op.drop_index(op.f('ix_assets_user_id'), table_name='assets')
    op.drop_table('assets')

    op.create_unique_constraint(op.f('users_workos_user_id_key'), 'users', ['workos_user_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    # ### end Alembic commands ###
